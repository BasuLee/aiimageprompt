网站项目规划制定
项目定位：一个高品质的AI图像和提示词精选画廊。 专注于提供经过精选、分类清晰的“图片+提示词”组合，让用户快速找到灵感并学习如何写出高质量的提示词。

核心功能模块：

精选画廊：以瀑布流或网格形式展示图片，鼠标点击后弹窗显示对应的图片及提示词。

分类和筛选：按模型筛选，目前只有nano-banana和gpt-4o。

搜索功能：支持通过关键词搜索图片和提示词。

复制功能：提供一键复制提示词和参数的功能。


用户访问网站首页。

浏览瀑布流中的精选图片。

通过分类或搜索功能，找到感兴趣的风格或主题。

点击图片查看详细信息，包括提示词、所用模型等。

一键复制提示词，到自己的AI模型中进行实践。

价值主张：我们是一个主流模型的最受欢迎的提示词库，也是一个小而美的精选画廊。我们通过人工筛选和高质量的内容，帮助用户快速获取灵感，并学会如何有效使用AI生成工具。

3. 项目开发需求PRD文档输出
项目名称：AI Image Prompt

域名：https://ai-image-prompt.com

关键词：ai image prompt,image prompt,image prompt generator,ai image prompt generator,ai images prompt,ai image prompts

项目类型：纯内容展示型网站

技术实现方案：

技术选型：纯前端实现。由于您提供的内容是静态资源（图片+提示词），且没有用户交互、数据存储、注册登录等后端需求，因此完全可以通过纯前端技术来实现，以确保最高的用户隐私和最少的服务器成本。

前端框架：Next.js，可以实现更好的性能和SEO优化。

数据管理：数据文件化。将所有的图片路径、提示词、分类、模型等信息以JSON文件的形式存储。

图片处理：为了保证加载速度，图片应进行压缩和WebP格式转换，并采用懒加载技术。

项目核心功能模块 PRD：

首页画廊模块

设计目标：快速吸引用户，展示高质量内容。

展示形式：瀑布流或网格布局。

内容：每张卡片包含图片，鼠标点击弹窗显示提示词。点击卡片可进入详情页。

详情页模块

设计目标：清晰展示所有相关信息。

内容：

大图展示。

可复制的完整提示词文本框。

参数（如 --ar 16:9）、模型版本信息。

分类标签（风格、主题）。

分类/筛选模块

设计目标：帮助用户快速定位内容。

功能：提供多选框或标签形式，按模型、风格、主题进行筛选。

搜索模块

设计目标：提供精确内容查找能力。

实现方式：

纯前端实现搜索需要遍历所有JSON数据

部署方案：

最佳方案：由于是纯前端项目，可直接部署在Cloudflare Pages。该服务提供免费、快速、全球CDN加速的静态站点托管，非常适合此类项目，且支持自定义域名。

部署流程：将代码推送到GitHub或GitLab仓库，配置Cloudflare Pages与仓库自动集成，每次代码更新后自动部署。



好的，这是为您整理的网站项目规划、需求文档以及开发步骤清单。

---

## AI Image Prompt 项目 - SEO与开发需求

### 一、核心页面要求
1. 网站必须包含**Terms of Service**（服务条款）和**Privacy Policy**（隐私政策）页面，且这两个页面的链接入口必须放在网站底部。
2. **博客页面 (Blog)**：导航栏默认包含 **Home** 和 **Blog**。需在导航栏添加博客目录（其中包含多篇博客文章，内容需涵盖工具使用方法、工具使用场景、用户使用评论以及联系我们方式。联系邮箱为 **firenull52@gmail.com**）。丰富的博客内容可以让网站显得更充实。
3. **FAQ 页面**：需在导航栏添加 FAQ 目录。页面内容需包含用户的常见问题及解决方案，以及联系我们的方法。
4. 赛博朋克风格

### 二、导航栏与页脚设置
1. **导航栏**：默认包含 **Home** 和 **Blog**，新增 **Blog** 目录和 **FAQ** 目录。导航栏页面切换必须触发重新加载，禁止使用前端 JavaScript 进行页面切换。
2. **页脚**：禁止包含 **Home**、**Blog**、**FAQ**。必须包含 **Terms of Service**、**Privacy Policy** 和 **Contact Us**。

### 三、SEO 相关规范
1. 每个页面的 **canonical URL** 必须准确：禁止包含 `www`，页面 URL 可以 `.html` 结尾，但 canonical URL 不能以 `.html` 结尾。
2. 每个 `<img>` 标签的 **alt** 值必须包含关键词。
3. 每个页面需**兼容移动端**。
4. 每个页面都要添加到 **sitemap.xml**，且 sitemap 文件名不能以 `.html` 结尾。
5. 页面 **description** 必须以 `#1` 开头。

### 四、技术实现要求
1. 所有页面均需采用**服务端渲染**，禁止使用客户端渲染。
2. 导航栏页面切换必须**重新加载**，不允许前端 JS 切换。
3. 使用 **Tailwind CSS** 作为样式语言。
4. 在每个页面的 `<head>` 中添加一行：`<link rel="icon" href="/favicon.ico" type="image/png">`。

### 五、内容规范
1. 网站所有内容必须为**全英文**。
2. 除主页外，其他每个页面的单词数尽量**不低于 600 个**（主页无需满足此要求）。

---

### 六、开发待办清单

1.  **项目搭建**：
    * 启动一个新的 Next.js 项目。
    * 为项目配置 Tailwind CSS。
    * 创建页面、组件和静态资源的目录结构。

2.  **服务端渲染 (SSR) 实现**：
    * 确保所有页面（Home、Blog、FAQ、ToS、Privacy、Contact Us）都通过服务端渲染。
    * 验证页面导航是否触发完全的页面重新加载，而非基于 JS 的过渡效果。

3.  **页面创建**：
    * **主页 (Home)**：
        * 实现带有瀑布流/网格布局的主画廊部分。
        * 开发搜索、分类和筛选组件（用于 `nano-banana` 和 `gpt-4o`）。
        * 编写点击图片后弹出窗口显示图片和提示词详情的逻辑。
    * **博客目录与文章 (Blog)**：
        * 创建一个主博客页面来列出所有文章。
        * 编写至少 3-5 篇初始博客文章，内容涵盖指定的几个主题（工具使用、用例、用户评价等）。
        * 确保博客文章内容丰富（超过 600 个单词）。
    * **FAQ 页面**：
        * 创建一个独立的 FAQ 页面，包含常见问题和答案列表。
        * 包含一个带有指定邮箱地址的“联系我们”部分。
    * **服务条款与隐私政策**：
        * 起草并创建这两个页面的内容。
        * 确保这些页面只从页脚链接。
    * **联系我们页面**：
        * 创建一个简单的联系页面，只包含邮箱地址 `firenull52@gmail.com`。

4.  **数据管理**：
    * 将所有图片和提示词数据组织成 JSON 文件，便于访问和更新。
    * 实现 Next.js 的 API 路由或 `getStaticProps` 来在构建过程中（或每次请求时，用于 SSR）获取这些数据。

5.  **SEO 与性能优化**：
    * 为所有页面实现动态 canonical URL 生成，确保不含 `.html` 和 `www`。
    * 为所有 `<img>` 标签添加 `alt` 属性，并包含相关关键词。
    * 使用 Tailwind CSS 实现移动优先的响应式设计。
    * 生成并更新 **sitemap.xml** 文件以包含所有页面。
    * 为每个页面的 `description` meta 标签添加 `#1` 开头。
    * 为图片实现懒加载并转换为 WebP 格式，以加快加载速度。

6.  **部署**：
    * 设置 Cloudflare Pages 部署流水线，并与 GitHub/GitLab 仓库关联。
    * 配置每次代码推送后自动部署。
    * 添加自定义域名 `ai-image-prompt.com`。

7.  **最终审查**：
    * 检查所有页面，确保内容为英文。
    * 确认所有页面（除主页外）的单词数达到 600 个以上。
    * 检查所有导航和页脚链接是否正确并遵循指定规则。
    * 进行最后的 SEO 检查，确保所有 `alt` 标签、canonical URL 和 descriptions 都正确无误。